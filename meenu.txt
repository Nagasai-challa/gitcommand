
PhototBucket.aspx : 
---------------------
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Default.aspx.cs" Inherits="WebRole1.Default" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
     <form id="form1" runat="server">
        <div>
            Choose File: <asp:FileUpload ID="imageSelector" runat="server" />
            <asp:Button ID="cmdUpload" runat="server" Text="Upload" OnClick="cmdUpload_Click" />
            <hr />
            <asp:ListView ID="imageGrid" runat="server">
                <ItemTemplate>
                    <asp:Image ImageUrl="<%#((Microsoft.WindowsAzure.Storage.Blob.IListBlobItem)(Container.DataItem)).Uri%>" Height="200px" Width="200px" runat="server" />
                </ItemTemplate>
            </asp:ListView>
        </div>
    </form>
</body>
</html>


PhototBucket.aspx.cs :
-------------------------------------------  
using Microsoft.WindowsAzure.Storage;
using Microsoft.WindowsAzure.Storage.Blob;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace WebRole1
{
    public partial class Default : System.Web.UI.Page
    {
        CloudStorageAccount sa;
        CloudBlobClient client;
        CloudBlobContainer container;
        CloudBlockBlob blob;
        protected void Page_Load(object sender, EventArgs e)
        {
            sa = CloudStorageAccount.Parse("DefaultEndpointsProtocol=https;AccountName=nagasaichalla422;AccountKey=GqVnNAWBbU/0ZjiuqqG0NXtyAwkj/olY5GQiFLZGqqPD0V8ylH3vXTqAy9RXk5ke7LE5lIRlIRf0+ASt6MVbCA==;EndpointSuffix=core.windows.net");
            client = sa.CreateCloudBlobClient();
            container = client.GetContainerReference("photobucket");
            container.CreateIfNotExists();
            imageGrid.DataSource = container.ListBlobs();
            imageGrid.DataBind();
        }
        protected void cmdUpload_Click(object sender, EventArgs e)
        {
            blob = container.GetBlockBlobReference(imageSelector.FileName);
            blob.UploadFromStream(imageSelector.FileContent);
            Response.Redirect("~/Default.aspx");
        }
    }
}

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
files :

    Default.aspx :
    
        <%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Default.aspx.cs" Inherits="WebRole1.Default" %>

        <!DOCTYPE html>

        <html xmlns="http://www.w3.org/1999/xhtml">
        <head runat="server">
            <title></title>
        </head>
        <body>
            <form id="form1" runat="server">
                <div>
                    <asp:Button ID="upload" runat="server" Text="upload" onlick="cmd_upload" OnClick="upload_Click" />
                    <asp:Button ID="download" runat="server" Text="download" onclick="cmd_download"/>
                </div>
            </form>
        </body>
        </html>

Default.aspx.cs :
_______________________________

using Microsoft.WindowsAzure.Storage.File;
using Microsoft.WindowsAzure.Storage;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace WebRole1
{
    public partial class Default : System.Web.UI.Page
    {
        CloudStorageAccount sa;
        CloudFileClient client;
        CloudFileShare share;
        CloudFileDirectory root, cd;
        CloudFile file;


        protected void Page_Load(object sender, EventArgs e)
        {
            sa = CloudStorageAccount.Parse("DefaultEndpointsProtocol=https;AccountName=nagasaichalla422;AccountKey=GqVnNAWBbU/0ZjiuqqG0NXtyAwkj/olY5GQiFLZGqqPD0V8ylH3vXTqAy9RXk5ke7LE5lIRlIRf0+ASt6MVbCA==;EndpointSuffix=core.windows.net");
            client = sa.CreateCloudFileClient();
            share = client.GetShareReference("beccsecp");
            share.CreateIfNotExists();
            root = share.GetRootDirectoryReference();
            cd = root.GetDirectoryReference("Myfiles");
            cd.CreateIfNotExists();
            file = cd.GetFileReference("file1");


        }

        protected void upload_Click(object sender, EventArgs e)
        {
            file.UploadFromFile("P:\\JAVA_TEXTBOOK\\test2.pdf");
            Response.Redirect("~/Default.aspx");
        }

        protected void cmd_download(object sender, EventArgs e)
        {
            file.DownloadToFile("P:\\file.pdf", System.IO.FileMode.OpenOrCreate);
            Response.Redirect("~/Default.aspx");

        }
    }
}


______________________________________________________________________________________________________________________________________________________________________________

Queues ::
_________

Default.aspx :
____________________

    <%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Default.aspx.cs" Inherits="WebRole1.Default" %>

    <!DOCTYPE html>

    <html xmlns="http://www.w3.org/1999/xhtml">
    <head runat="server">
        <title></title>
    </head>
    <body>
        <form id="form1" runat="server">
        <div>
            Mail Id: <asp:TextBox ID="mid" runat="server"></asp:TextBox>
            Subject: <asp:TextBox ID="sub" runat="server"></asp:TextBox>
            Message: <asp:TextBox ID="msg" runat="server"></asp:TextBox>
            <asp:Button ID="sumbmit" Text="Insert" runat="server" OnClick="sumbmit_Click" />
        </div>
        </form>
    </body>
    </html>
    
    
Default.aspx.cs ::
________________________

using Microsoft.WindowsAzure.Storage;
using Microsoft.WindowsAzure.Storage.Queue;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace WebRole1
{
    public partial class Default : System.Web.UI.Page
    {
        CloudQueue queue;
        protected void Page_Load(object sender, EventArgs e)
        {
            CloudStorageAccount csa = CloudStorageAccount.Parse("DefaultEndpointsProtocol=https;AccountName=nagasaichalla422;AccountKey=GqVnNAWBbU/0ZjiuqqG0NXtyAwkj/olY5GQiFLZGqqPD0V8ylH3vXTqAy9RXk5ke7LE5lIRlIRf0+ASt6MVbCA==;EndpointSuffix=core.windows.net");
            CloudQueueClient client = csa.CreateCloudQueueClient();
            queue = client.GetQueueReference("mail");
            queue.CreateIfNotExists();
        }

        protected void sumbmit_Click(object sender, EventArgs e)
        {
            String id = mid.Text;
            String s = sub.Text;
            String m = msg.Text;
            CloudQueueMessage qmsg = new CloudQueueMessage(id + "," + s + "," + m);
            queue.AddMessage(qmsg);
        }
    }
}


WorkerRole.aspx :

______________________

using Microsoft.WindowsAzure;
using Microsoft.WindowsAzure.Diagnostics;
using Microsoft.WindowsAzure.ServiceRuntime;
using Microsoft.WindowsAzure.Storage;
using Microsoft.WindowsAzure.Storage.Queue;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Net;
using System.Net.Mail;
using System.Threading;
using System.Threading.Tasks;

namespace WorkerRole1
{
    public class WorkerRole : RoleEntryPoint
    {
        private readonly CancellationTokenSource cancellationTokenSource = new CancellationTokenSource();
        private readonly ManualResetEvent runCompleteEvent = new ManualResetEvent(false);

        public override void Run()
        {
            CloudStorageAccount csa = CloudStorageAccount.Parse("DefaultEndpointsProtocol=https;AccountName=nagasaichalla422;AccountKey=GqVnNAWBbU/0ZjiuqqG0NXtyAwkj/olY5GQiFLZGqqPD0V8ylH3vXTqAy9RXk5ke7LE5lIRlIRf0+ASt6MVbCA==;EndpointSuffix=core.windows.net");
            CloudQueueClient client = csa.CreateCloudQueueClient();
            CloudQueue queue = client.GetQueueReference("mail");
            queue.CreateIfNotExists();
            CloudQueueMessage msg = queue.GetMessage();
            if (msg != null)
            {
                String smsg = msg.AsString;
                String[] details = smsg.Split(',');
                SmtpClient sclient = new SmtpClient();
                sclient.Host = "smtp.gmail.com";
                sclient.Port = 587;
                sclient.UseDefaultCredentials = false;
                sclient.EnableSsl = true;
                MailMessage mmsg = new MailMessage();
                mmsg.From = new MailAddress("nagasaichalla1234@gmail.com");
                mmsg.To.Add(details[0]);
                mmsg.Subject = details[1];
                mmsg.Body = details[2];
                sclient.Credentials = new NetworkCredential("nagasaichalla1234@gmail.com", "farg bnnb dnju cenb");
                sclient.Send(mmsg);
                queue.DeleteMessage(msg);
            }
        }

        public override bool OnStart()
        {
            // Use TLS 1.2 for Service Bus connections
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

            // Set the maximum number of concurrent connections
            ServicePointManager.DefaultConnectionLimit = 12;

            // For information on handling configuration changes
            // see the MSDN topic at https://go.microsoft.com/fwlink/?LinkId=166357.

            bool result = base.OnStart();

            Trace.TraceInformation("WorkerRole1 has been started");

            return result;
        }

        public override void OnStop()
        {
            Trace.TraceInformation("WorkerRole1 is stopping");

            this.cancellationTokenSource.Cancel();
            this.runCompleteEvent.WaitOne();

            base.OnStop();

            Trace.TraceInformation("WorkerRole1 has stopped");
        }

        private async Task RunAsync(CancellationToken cancellationToken)
        {
            // TODO: Replace the following with your own logic.
            while (!cancellationToken.IsCancellationRequested)
            {
                Trace.TraceInformation("Working");
                await Task.Delay(1000);
            }
        }
    }
}


______________________________________________________________________________________________________________________________________________________________________________

Tables ::
___________

Default . aspx :

_________________

<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Default.aspx.cs" Inherits="WebRole1.Default" %>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
        <div>
            <asp:Table ID="tbladdrecord" runat="server" HorizontalAlign="Center">
                <asp:TableRow>
                    <asp:TableCell>Name:</asp:TableCell>
                    <asp:TableCell><asp:TextBox ID="txtname" runat="server"></asp:TextBox></asp:TableCell>
                </asp:TableRow>
                <asp:TableRow>
                    <asp:TableCell>Contact Number:</asp:TableCell>
                    <asp:TableCell><asp:TextBox ID="txtcn" runat="server"></asp:TextBox></asp:TableCell>
                </asp:TableRow>
                <asp:TableRow>
                    <asp:TableCell>Contact Type:</asp:TableCell>
                    <asp:TableCell><asp:TextBox ID="txtct" runat="server"></asp:TextBox></asp:TableCell>
                </asp:TableRow>
                <asp:TableRow>
                   <asp:TableCell>Email:</asp:TableCell>
                   <asp:TableCell><asp:TextBox ID="txtemail" runat="server"></asp:TextBox></asp:TableCell>
               </asp:TableRow>
                <asp:TableRow>
                    <asp:TableCell ColumnSpan="2"><asp:Button ID="cmdInsert" Text="Insert" runat="server" OnClick="cmdInsert_Click" /></asp:TableCell>
                </asp:TableRow>
            </asp:Table>
            <hr />
            <asp:GridView ID="ContactGrid" runat="server" HorizontalAlign="Center" AutoGenerateColumns="false" OnRowCommand="ContactGrid_RowCommand">
                <Columns>
                    <asp:BoundField DataField="Name" HeaderText="Name" />
                    <asp:BoundField DataField="Email" HeaderText="Email ID" />
                    <asp:BoundField DataField="PartitionKey" HeaderText="Contact Type" />
                    <asp:BoundField DataField="RowKey" HeaderText="Contact Number" />
                     <!--<asp:ButtonField ButtonType="Link" HeaderText="Edit/Delete" Text="Edit/Delete" />  -->
                </Columns>
            </asp:GridView>
            <hr />
            <asp:Table runat="server" ID="tbleditrecord" Visible="false" HorizontalAlign="Center">
                <asp:TableRow>
                    <asp:TableCell>Name:</asp:TableCell>
                    <asp:TableCell><asp:TextBox ID="txtedname" runat="server"></asp:TextBox></asp:TableCell>
                </asp:TableRow>
                <asp:TableRow>
                    <asp:TableCell>Contact Number:</asp:TableCell>
                    <asp:TableCell><asp:TextBox ID="txtedcn" runat="server" Enabled="false"></asp:TextBox></asp:TableCell>
                </asp:TableRow>
                <asp:TableRow>
                    <asp:TableCell>Contact Type:</asp:TableCell>
                    <asp:TableCell><asp:TextBox ID="txtedct" runat="server" Enabled="false"></asp:TextBox></asp:TableCell>
                </asp:TableRow>
                <asp:TableRow>
                   <asp:TableCell>Email:</asp:TableCell>
                   <asp:TableCell><asp:TextBox ID="txtedemail" runat="server"></asp:TextBox></asp:TableCell>
               </asp:TableRow>
                <asp:TableRow>
                    <asp:TableCell>
                        <asp:Button ID="cmdEdit" Text="Update" runat="server" OnClick="cmdEdit_Click" />
                    </asp:TableCell>
                    <asp:TableCell>
                        <asp:Button ID="cmdDelete" Text="Delete" runat="server" OnClick="cmdDelete_Click" />
                    </asp:TableCell>
                </asp:TableRow>
            </asp:Table>
            
        </div>
    </form>
</body>
</html>


Default.aspx.cs ::
___________________

using Microsoft.WindowsAzure.Storage;
using Microsoft.WindowsAzure.Storage.Table;
using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace WebRole1
{
    public class ContactEntity : TableEntity
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public ContactEntity() { }
        public ContactEntity(string name, string email, string contactNumber, string contactType)
        {
            Name = name;
            Email = email;
            PartitionKey = contactType;
            RowKey = contactNumber;
        }
    }
    public partial class Default : System.Web.UI.Page
    {
        CloudStorageAccount sa;
        CloudTableClient client;
        CloudTable table;
        protected void Page_Load(object sender, EventArgs e)
        {
            sa = CloudStorageAccount.Parse("DefaultEndpointsProtocol=https;AccountName=blobstroageaccount;AccountKey=d2TNbnuNqoZtBkK+r8eg1xQZwDzi49mngGZrdJiVoHqqvO1IuzgwPjAEGKU744jOJCRj1VIotWFy+AStfDnNqA==;EndpointSuffix=core.windows.net");
            client = sa.CreateCloudTableClient();
            table = client.GetTableReference("contactbook");
            table.CreateIfNotExists();
            TableQuery<ContactEntity> query = new TableQuery<ContactEntity>();
            ContactGrid.DataSource = table.ExecuteQuery<ContactEntity>(query);
            ContactGrid.DataBind();
        }
        protected void cmdInsert_Click(object sender, EventArgs e)
        {
            string name = txtname.Text;
            string email = txtemail.Text;
            string contactNumber = txtcn.Text;
            string contactType = txtct.Text;
            ContactEntity contact = new ContactEntity(name, email, contactNumber, contactType);
            TableOperation iop = TableOperation.Insert(contact);
            table.Execute(iop);
            Response.Redirect("~/Default.aspx");
        }

        protected void cmdEdit_Click(object sender, EventArgs e)
        {
            TableOperation rop = TableOperation.Retrieve<ContactEntity>(txtedct.Text, txtedcn.Text);
            TableResult result = table.Execute(rop);
            ContactEntity rcontact = (ContactEntity)result.Result;
            rcontact.Name = txtedname.Text;
            rcontact.Email = txtedemail.Text;
            table.Execute(TableOperation.Replace(rcontact));
            Response.Redirect("~/Default.aspx");
        }

        protected void cmdDelete_Click(object sender, EventArgs e)
        {
            TableOperation rop = TableOperation.Retrieve<ContactEntity>(txtedct.Text, txtedcn.Text);
            TableResult result = table.Execute(rop);
            ContactEntity rcontact = (ContactEntity)result.Result;
            TableOperation deleteOperation = TableOperation.Delete(rcontact);
            table.Execute(deleteOperation);
            Response.Redirect("~/Default.aspx");
        }

        protected void ContactGrid_RowCommand(object sender, GridViewCommandEventArgs e)
        {
            tbladdrecord.Visible = false;
            ContactGrid.Visible = false;
            tbleditrecord.Visible = true;
            int index = Int32.Parse(e.CommandArgument.ToString());
            GridViewRow row = ContactGrid.Rows[index];
            txtedname.Text = row.Cells[0].Text;
            txtedemail.Text = row.Cells[1].Text;
            txtedct.Text = row.Cells[2].Text;
            txtedcn.Text = row.Cells[3].Text;
        }
    }
} 


______________________________________________________________________________________________________________________________________________________________________________

First Program ::
-----------------

Default . cshtml :

______________________

@using WebMatrix.Data

@{
    Layout = "~/Shared/_Layout.cshtml";
    PageData["PageTitle"] = "BEC BookStore";
    var sQuery = "select * from Book";
    Database db = Database.Open("BookStore");
    var searchTerm = " ";
    var title = Request.Form["ttb"];
    var author = Request.Form["atb"];
    var price = Request.Form["ptb"];
    if (IsPost && Request.Form["sbtn"] != null)
    {
        searchTerm = "%" + Request.Form["stb"] + "%";
        sQuery = "Select * from Book where title like @0";
    }
    if (IsPost && Request.Form["abbtn"] != null)
    {
        Validation.RequireField("ttb", "Enter Title");
        Validation.RequireField("atb", "Enter Author Name");
        Validation.RequireField("ptb", "Enter Price");
        if (Validation.IsValid())
        {
            int pr = 0;
            Int32.TryParse(Request.Form["ptb"], out pr);
            var iquery = "insert into Book(title,author,price) values('" + Request.Form["ttb"] + "','" + Request.Form["atb"] + "','" + pr + "')";
            db.Execute(iquery);
            Response.Redirect("~/default.cshtml");
        }
    }
    var result = db.Query(sQuery, searchTerm);
    WebGrid grid = new WebGrid(source: result);
}

<form method="post" action=" ">
    <fieldset>
        <legend style="text-align:left">Search</legend>
        <label for="stb">Enter Book</label>
        <input type="text" width="30" id="stb" name="stb" value="" />
        <input type="submit" id="sbtn" name="sbtn" value="Search" />
    </fieldset>
    <fieldset>
        @Html.ValidationSummary()
        <legend style="text-align:left">Add Book</legend>
        <label for="ttb">Title:</label>
        <input type="text" width="30" id="ttb" name="ttb" value="" />
        <label for="ttb">Author:</label>
        <input type="text" width="30" id="atb" name="atb" value="" />
        <label for="ttb">Price:</label>
        <input type="text" width="30" id="ptb" name="ptb" value="" />
        <input type="submit" id="abbtn" name="abbtn" value="Add Book" />
    </fieldset>
</form>

@grid.GetHtml(tableStyle: "grid",
    alternatingRowStyle: "alt",
    headerStyle: "head",
    columns: grid.Columns(
        grid.Column("Id"),
        grid.Column("title"),
        grid.Column("author"),
        grid.Column("price"),
        grid.Column(format:@<a href="~/EditOrDelete?id=@item.Id">Edit/Delete</a>)
)
)

EditOrDelete :
_____________________

@using WebMatrix.Data
@{
    Layout = "~/Shared/_Layout.cshtml";
    PageData["PageTitle"] = "Edit or Delete Book";
    Database db = Database.Open("Bookstore");
    var query = "select * from Book where Id=" + Int32.Parse(Request.QueryString["id"]);
    var row = db.QuerySingle(query);
    if (IsPost && Request.Form["eb"] != null)
    {
        var uquery = "update Book set title=@0,author=@1,price=@2 where id=@3";
        db.Execute(uquery, Request.Form["ttb"], Request.Form["atb"], Int32.Parse(Request.Form["ptb"]),
            Int32.Parse(Request.QueryString["id"]));
        Response.Redirect("~/Default");
    }
    if (IsPost && Request.Form["db"] != null)
    {
        var dquery = "delete from Book where id=@0";
        db.Execute(dquery, Int32.Parse(Request.QueryString["id"]));
        Response.Redirect("~/Default");
    }
}
<form method="post" action="">
    <table width="80%" border="1">
        <tr>
            <td width="80%" style="text-align:right">
                ID:
            </td>
            <td>
                <input type="text" name="idtb" id="idtb" width="150" value="@row.Id" disabled />
            </td>
        </tr>
        <tr>
            <td style="text-align:right">
                Title:
            </td>
            <td>
                <input type="text" name="ttb" id="ttb" width="150" value="@row.title" />
            </td>
        </tr>
        <tr>
            <td style="text-align:right">
                Author:
            </td>
            <td>
                <input type="text" name="atb" id="atb" width="150" value="@row.author" />
            </td>
        </tr>
        <tr>
            <td style="text-align:right">
                Price:
            </td>
            <td>
                <input type="text" name="ptb" id="ptb" width="150" value="@row.price" />
            </td>
        </tr>
        <tr>
            <td style="text-align:right">
                <input type="submit" value="Edit" name="eb" />
            </td>
            <td>
                <input type="submit" value="Delete" name="db" />
            </td>
        </tr>
    </table>
</form>


LayOut.cshtml :
____________________

<!DOCTYPE html>
<html>
<head>
    <title>@PageData["PageTitle"]</title>
    <link rel="stylesheet" href="./css/stylesheet.css" />
</head>
<body>
    @RenderPage("~/Shared/_Header.cshtml")
    <center>
        @RenderBody()
    </center>
    @RenderPage("~/Shared/_Footer.cshtml")
</body>
</html>

______________________________________________________________________________________________________________________________________________________________________________
